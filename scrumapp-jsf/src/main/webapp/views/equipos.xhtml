<ui:composition
                xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://xmlns.jcp.org/jsf/html"
                xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
                xmlns:f="http://xmlns.jcp.org/jsf/core"
                xmlns:p="http://primefaces.org/ui">
    <ui:define name="content">
        <h:form id="form">

            <div class="card">
                <h5>Responsive Grid</h5>
                <style>
                    /* reset on the showcase style*/
                    body .ui-panelgrid .ui-panelgrid-cell {
                        background-color: transparent;
                    }

                    /* example use of styles for your form */
                    .my-heading-row {
                        background-color: var(--surface-c);
                        font-weight: bold;
                    }
                </style>

                <!--
                Note: Rows and columns can have style, styleClass, and id.
                Note: A column with a defined styleClass will ignore the styleClass specified in the columnClasses list.
                Note: Note the use of ui-fluid to ensure that components are sized correctly and the use of ui-panelgrid-blank to remove borders.
                -->
                <p:panelGrid columns="4"
                             columnClasses="ui-grid-col-2,ui-grid-col-4,ui-grid-col-2,ui-grid-col-4"
                             layout="grid"
                             styleClass="ui-panelgrid-blank ui-fluid"
                             style="border:0px none; background-color:transparent;">

                    <p:row styleClass="my-heading-row">
                        Biographic
                    </p:row>

                    <p:outputLabel for="@next" value="First Name" />
                    <p:inputText width="20"/>

                    <p:outputLabel for="@next" value="Last Name"/>
                    <p:inputText width="20"/>

                    <p:outputLabel for="@next" value="Phone"/>
                    <p:inputText width="20"/>

                    <p:outputLabel for="@next" value="Email"/>
                    <p:inputText width="20"/>

                    <p:outputLabel for="@next" value="Address"/>
                    <p:inputTextarea rows="3"/>

                    <p:row id="my-row-id" styleClass="my-heading-row" style="font-weight: bold">
                        Vehicle
                    </p:row>

                    <p:outputLabel for="@next" value="Manufacturer"/>
                    <p:inputText/>

                    <p:outputLabel for="@next" value="Series"/>
                    <p:inputText/>

                    <p:outputLabel for="@next" value="Color"/>
                    <p:inputText/>

                    <p:outputLabel for="idReg" value="Registration Number"/>
                    <p:column style="background-color: lightcoral">
                        <p:inputText id="idReg"/>
                    </p:column>

                    <p:row>
                        <p:column styleClass="ui-grid-col-12">
                            <p>It should be noted that the use of @next is not possible for the
                                <u>Registration Number</u> outputLabel and the <u>for</u> attribute
                                should utilize an ID as shown in the example. The other outputLabel and inputText fields do not require this
                                as they are the natural next element whereas
                                <u>Registration Number</u> is encapsulated in a column.</p>
                        </p:column>
                    </p:row>

                    <p:row>
                        <p:column styleClass="ui-grid-col-12">
                            <p:commandButton value="Accept" styleClass="p-mr-2" style="width: auto"/>
                            <p:commandButton value="Reject" styleClass="p-mr-2" style="width: auto"/>
                            <p:commandButton value="Refer" style="width: auto" />
                        </p:column>
                    </p:row>
                </p:panelGrid>
            </div>

        </h:form>
    </ui:define>
</ui:composition>